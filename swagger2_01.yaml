swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/account/{accountId}/transactions/{monthly}:
    get:
      tags:
        - Transaction Module
      summary: Process Monthly Transactions
      description: API for processing monthly transactions
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: accountId
          required: true
          description: ID of the account
          type: string
        - in: path
          name: monthly
          required: true
          description: Monthly period
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Transactions processed successfully
          schema:
            $ref: '#/definitions/TransactionsArray'
        '400':
          description: Invalid monthly period format
        '404':
          description: Account not found  
        '500':
          description: Internal Server Error
  /user/account/transactions/{transactionId}:
    get:
      tags:
        - Transaction Module
      summary: Retrieve a specific transaction
      description: API to fetch information about the transaction identified by `transactionId`.
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: transactionId
          required: true
          description: Unique identifier of the transaction to retrieve.
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successfully retrieved transaction details
          schema:
            $ref: '#/definitions/TransactionDetails'
        '403':
          description: Unauthorized to access this transaction 
        '404':
          description: Transaction not found.
        '500':
          description: Internal Server Error
    patch:
      tags:
        - Transaction Module
      summary: Update a specific transaction's details
      description: API to partially update a transaction, such as changing the category.
      parameters:
      - in: header
        name: Authorization
        description: Attach Bearer JWT token
        required: true
        type: string
      - in: path
        name: transactionId
        required: true
        description: Unique identifier of the transaction to modify.
        type: string
      - in: body
        name: transactionUpdate
        required: true
        description: Fields to update in the transaction.
        schema:
          type: object
          properties:
            transactionType:
              type: string
              description: Type of transaction.
            category:
              type: string
              description: The category to assign to the transaction.
            note:
              type: string
              description: Updated description of the transaction.
      responses:
        '200':
          description: Transaction updated successfully.
          schema:
            $ref: '#/definitions/TransactionDetails'
        '403':
          description: Unauthorized to access this transaction 
        '404':
          description: Transaction not found.
        '500':
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  TransactionsArray:
      type: array
      items:
        type: object
        properties:
            transactionId:
              type: string
            date:
              type: string
            description:
              type: string
            amount:
              type: number
  TransactionDetails:
    properties:
      accountId:
        type: number
      transactionId:
        type: string
      date:
        type: string
        format: date
      description:
        type: string
      amount:
        type: number
      transactionType:
        type: string
      category:
        type: string
      notes:
        type: string
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string

